Быстрая сортировка (Quick Sort)
Преимущества:
Одна из самых быстрых на практике сортировок.
Эффективна для больших данных.
Недостатки:
Сложность в худшем случае O(n^2), но это редко встречается на практике с хорошим выбором опорного элемента.
Неустойчивая сортировка.
Когда использовать:
Для больших массивов, когда не требуется устойчивость сортировки.
Пример: Сортируем массив [6, 5, 3, 1, 8, 7, 2, 4]. Выбираем опорный элемент (4), распределяем элементы вокруг него; меньшие слева, большие справа. Рекурсивно повторяем для подмассивов.

def quick_sort(arr):
    if len(arr) <= 1:
        return arr
    else:
        pivot = arr[len(arr) // 2]
        left = [x for x in arr if x < pivot]
        middle = [x for x in arr if x == pivot]
        right = [x for x in arr if x > pivot]
        return quick_sort(left) + middle + quick_sort(right)

# Пример использования
array = [6, 5, 3, 1, 8, 7, 2, 4]
sorted_array = quick_sort(array)
print("Отсортированный массив:", sorted_array)

Описание Алгоритма:
Выбрать опорный элемент из массива.
Разделить массив так, чтобы элементы меньше опорного оказались слева от него, а больше – справа.
Рекурсивно применить те же шаги к левому и правому подмассивам.