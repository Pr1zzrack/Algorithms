Сортировка вставками (Insertion Sort):

Алгоритм начинает с элемента на второй позиции (индекс 1), так как считается, что массив из одного элемента уже отсортирован.
Для каждого элемента на каждом шаге алгоритм сравнивает его со всеми элементами, которые находятся слева от него.
Если текущий элемент меньше элемента слева, то они меняются местами, и алгоритм продвигается дальше влево.
Этот процесс повторяется до тех пор, пока не найдено правильное место для текущего элемента.
Алгоритм продолжает таким образом с каждым элементом, пока не будет упорядочен весь массив.


def insertion_sort(nums):
    for i in range(1, len(nums)):
        key = nums[i]
        j = i - 1
        while j >= 0 and nums[j] > key:
            nums[j + 1] = nums[j]
            j -= 1
        nums[j + 1] = key
    return nums

# Пример использования
lst = [3, 1, 7, 23, 2, 2, 1, 0]
sorted_lst = insertion_sort(lst)
print(sorted_lst)


Объяснение кода:

Внешний цикл for i in range(1, len(nums)) перебирает все элементы массива, начиная с индекса 1.
Внутренний цикл while j >= 0 and nums[j] > key выполняет сравнения и перемещение элементов влево до тех пор, пока не будет найдено правильное место для текущего элемента key.
После завершения внутреннего цикла текущий элемент key вставляется на свое место в упорядоченной части массива.
Этот код реализует алгоритм сортировки вставками, и после его выполнения массив будет отсортирован в порядке возрастания.