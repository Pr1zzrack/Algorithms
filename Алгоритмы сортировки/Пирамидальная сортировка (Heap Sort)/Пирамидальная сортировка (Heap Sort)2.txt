Пирамидальная сортировка (Heap Sort):

Построение максимальной кучи (Heapify):
Начинаем с построения максимальной кучи. Итерируемся по элементам массива справа налево, начиная с первого элемента, у которого есть потомки (то есть, начиная с индекса n // 2 - 1, где n - размер массива).
Для каждого элемента вызываем процедуру heapify, которая сравнивает текущий элемент с его потомками и, если необходимо, меняет их местами, чтобы поддерживать свойство максимальной кучи.
Извлечение элементов и сортировка:
Максимальный элемент (корень кучи) обменивается с последним элементом массива. После обмена размер кучи уменьшается на 1.
Вызывается heapify на корне (первом элементе), чтобы восстановить свойство максимальной кучи.
Эти шаги повторяются до тех пор, пока весь массив не будет отсортирован.


Код:

def heapify(nums, n, i):
    largest = i
    left = 2 * i + 1
    right = 2 * i + 2

    # Сравнение с левым потомком
    if left < n and nums[left] > nums[largest]:
        largest = left

    # Сравнение с правым потомком
    if right < n and nums[right] > nums[largest]:
        largest = right

    # Если largest не является корнем, меняем их местами и вызываем heapify рекурсивно
    if largest != i:
        nums[i], nums[largest] = nums[largest], nums[i]
        heapify(nums, n, largest)

def heap_sort(nums):
    n = len(nums)

    # Построение максимальной кучи
    for i in range(n // 2 - 1, -1, -1):
        heapify(nums, n, i)

    # Извлечение элементов и сортировка
    for i in range(n - 1, 0, -1):
        nums[i], nums[0] = nums[0], nums[i]  # Обмен максимального элемента с последним
        heapify(nums, i, 0)  # Восстановление свойства максимальной кучи

    return nums

# Пример использования
lst = [3, 1, 7, 23, 2, 2, 1, 0]
sorted_lst = heap_sort(lst)
print(sorted_lst)



Объяснение кода:

heapify: Функция, которая принимает массив nums, размер кучи n, и индекс i. Она сравнивает элемент с его левым и правым потомками, меняет местами, если необходимо, и рекурсивно вызывается для поддерева.
heap_sort: Основная функция для пирамидальной сортировки. Сначала строится максимальная куча, затем происходит извлечение элементов и их сортировка.